# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test
- security
- deploy
sast:
  stage: security
  variables:
    SAST_EXCLUDED_PATHS: spec, test, tests, tmp,.cache,
secret_detection:
  stage: security
dependency_scanning:
  stage: security
include:
- template: Jobs/Dependency-Scanning.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/poetry"
cache:
  paths:
  - ".cache/pip"
  - ".cache/poetry"
  - venv/
  - ".mypy_cache"
  - ".pytest_cache"
default:
  before_script:
  - |
    if [ -f "$HOME/.cargo/env" ];
    then
      source "$HOME/.cargo/env"
      /opt/poetry/bin/poetry install
      source $(/opt/poetry/bin/poetry env info --path)/bin/activate
      python3 --version # For debugging
    else
      echo "~/.cargo/env does not exist, assuming this is an included stage"
    fi
test-server:
  image: registry.gitlab.com/edea-dev/ci-runner:latest
  stage: test
  script:
  - coverage run -m pytest app
  - coverage report
  - coverage xml
  coverage: "/(?i)total.*? (100(?:\\.0+)?\\%|[1-9]?\\d(?:\\.\\d+)?\\%)$/"
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
test-ui:
  image: mcr.microsoft.com/playwright:v1.37.1-jammy
  stage: test
  script:
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get update; apt-get install -qq software-properties-common; add-apt-repository
    ppa:deadsnakes/ppa
  - apt-get update; apt-get install -qq python3.11; curl -sSL https://install.python-poetry.org
    | python3 -
  - export PATH="/root/.local/bin:$PATH"
  - poetry install
  - npm install
  - nohup poetry run uvicorn app.main:app &
  - npx playwright test
typecheck:
  image: registry.gitlab.com/edea-dev/ci-runner:latest
  stage: build
  script:
  - mypy -p app
pages:
  image: registry.gitlab.com/edea-dev/ci-runner:latest
  stage: deploy
  script:
  - cd doc
  - mdbook build
  - mv book/ ../public/
  artifacts:
    paths:
    - public
  rules:
  - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
